// <auto-generated />
using FeatureToggle.Infrastructure.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeatureToggle.Infrastructure.Migrations
{
    [DbContext(typeof(FeatureContext))]
    [Migration("20241113075050_FeatureMig1")]
    partial class FeatureMig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FeatureToggle.Domain.Entity.Custom_Schema.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Business", "FeatureDB");
                });

            modelBuilder.Entity("FeatureToggle.Domain.Entity.Custom_Schema.BusinessFeatureFlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("FeatureId");

                    b.ToTable("BusinessFeatureFlag", "FeatureDB");
                });

            modelBuilder.Entity("FeatureToggle.Domain.Entity.Custom_Schema.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Feature", "FeatureDB");
                });

            modelBuilder.Entity("FeatureToggle.Domain.Entity.Custom_Schema.BusinessFeatureFlag", b =>
                {
                    b.HasOne("FeatureToggle.Domain.Entity.Custom_Schema.Business", "Business")
                        .WithMany("BusinessFeatures")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FeatureToggle.Domain.Entity.Custom_Schema.Feature", "Feature")
                        .WithMany("BusinessFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Business");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("FeatureToggle.Domain.Entity.Custom_Schema.Business", b =>
                {
                    b.Navigation("BusinessFeatures");
                });

            modelBuilder.Entity("FeatureToggle.Domain.Entity.Custom_Schema.Feature", b =>
                {
                    b.Navigation("BusinessFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
